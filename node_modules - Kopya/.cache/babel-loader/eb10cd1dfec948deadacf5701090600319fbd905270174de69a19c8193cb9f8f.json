{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\spring_front_app\\\\frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Burada API çağrısı vs. yaparsın, örnek olarak:\n    // Diyelim ki giriş başarılı oldu ve rol bilgisi elde ettin\n    // Örnek rol verisi:\n    const role = \"PROJE_YONETICISI\"; // ya da \"CALISAN\"\n\n    // Rolü localStorage'a kaydet\n    localStorage.setItem(\"role\", JSON.stringify([{\n      authority: role\n    }]));\n\n    // Giriş başarılıysa role göre yönlendir\n    if (role === \"PROJE_YONETICISI\") {\n      navigate(\"/admin-dashboard\");\n    } else if (role === \"CALISAN\") {\n      navigate(\"/user-dashboard\");\n    } else {\n      // Başka roller varsa ya da varsayılan\n      navigate(\"/login\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Kullan\\u0131c\\u0131 Ad\\u0131\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u015Eifre\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","role","localStorage","setItem","JSON","stringify","authority","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Masaüstü/spring_front_app/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Burada API çağrısı vs. yaparsın, örnek olarak:\r\n        // Diyelim ki giriş başarılı oldu ve rol bilgisi elde ettin\r\n        // Örnek rol verisi:\r\n        const role = \"PROJE_YONETICISI\"; // ya da \"CALISAN\"\r\n\r\n        // Rolü localStorage'a kaydet\r\n        localStorage.setItem(\"role\", JSON.stringify([{ authority: role }]));\r\n\r\n        // Giriş başarılıysa role göre yönlendir\r\n        if (role === \"PROJE_YONETICISI\") {\r\n            navigate(\"/admin-dashboard\");\r\n        } else if (role === \"CALISAN\") {\r\n            navigate(\"/user-dashboard\");\r\n        } else {\r\n            // Başka roller varsa ya da varsayılan\r\n            navigate(\"/login\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Kullanıcı Adı\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Şifre\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Giriş Yap</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA;IACA;IACA,MAAMC,IAAI,GAAG,kBAAkB,CAAC,CAAC;;IAEjC;IACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC;MAAEC,SAAS,EAAEL;IAAK,CAAC,CAAC,CAAC,CAAC;;IAEnE;IACA,IAAIA,IAAI,KAAK,kBAAkB,EAAE;MAC7BJ,QAAQ,CAAC,kBAAkB,CAAC;IAChC,CAAC,MAAM,IAAII,IAAI,KAAK,SAAS,EAAE;MAC3BJ,QAAQ,CAAC,iBAAiB,CAAC;IAC/B,CAAC,MAAM;MACH;MACAA,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAMiB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBACzBlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,8BAAe;MAC3BC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAGb,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF3B,OAAA;MACImB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,YAAO;MACnBC,KAAK,EAAEhB,QAAS;MAChBiB,QAAQ,EAAGb,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF3B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEf;AAACzB,EAAA,CA5CQD,KAAK;EAAA,QAGOH,WAAW;AAAA;AAAA8B,EAAA,GAHvB3B,KAAK;AA8Cd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}